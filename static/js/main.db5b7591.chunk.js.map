{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showHideDetails","handleShowHideButton","setState","event","this","props","className","summary","start","dateTime","location","href","htmlLink","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleItemClicked","suggestion","updateEvents","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","type","placeholder","onChange","onFocus","style","display","NumberOfEvents","eventCount","handleEventInputChanged","htmlFor","name","mockData","extractLocations","Set","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","startsWith","done","token","removeQuery","url","setItem","JSON","stringify","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","locationEvents","console","log","slice","mounted","numberOfEvents","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.db5b7591.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    showHideDetails: false,\r\n  };\r\n\r\n  handleShowHideButton = () => {\r\n    if (this.state.showHideDetails === true) {\r\n      this.setState({ showHideDetails: false });\r\n    } else {\r\n      this.setState({ showHideDetails: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    return (\r\n      <div className='event'>\r\n        <h1>{event.summary}</h1>\r\n        <p>{event.start.dateTime}</p>\r\n        <p className='locations'>{event.location}</p>\r\n\r\n        {this.state.showHideDetails && (\r\n          <div className='event-details'>\r\n            <h2>About event:</h2>\r\n            <a href={event.htmlLink}>See Details on Google Calendar</a>\r\n            <p>{event.description}</p>\r\n          </div>\r\n        )}\r\n\r\n        <button\r\n          className='show-hide-btn'\r\n          onClick={() => this.handleShowHideButton()}\r\n        >\r\n          {!this.state.showHideDetails ? 'show details' : 'hide details'}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className='EventList'>\r\n        {events.map((event) => (\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n      };\r\n\r\n      handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n          query: suggestion,\r\n          showSuggestions: false\r\n        });\r\n      \r\n        this.props.updateEvents(suggestion, 0);\r\n      }\r\n      \r\n      handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n          return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        this.setState({\r\n          query: value,\r\n          suggestions,\r\n        });\r\n      };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n          <input\r\n        type=\"text\"\r\n        className=\"city\"\r\n        value={this.state.query}\r\n        placeholder=\"Search city\"\r\n        onChange={this.handleInputChanged}\r\n        onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n      />\r\n      <div className=\"selectNumber\">Select number of events</div>\r\n    <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\r\n    {this.state.suggestions.map((suggestion) => (\r\n        <li\r\n        key={suggestion}\r\n        onClick={() => this.handleItemClicked(suggestion)}\r\n        >{suggestion}</li>\r\n    ))}\r\n    <li onClick={() => this.handleItemClicked(\"all\")}>\r\n      <b>See all cities</b>\r\n    </li>\r\n    </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    eventCount: 5,\r\n  };\r\n\r\n  handleEventInputChanged = (event) => {\r\n    const eventCount = event.target.value;\r\n    this.setState({\r\n      eventCount,\r\n    });\r\n    this.props.updateEvents('', eventCount);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='EventNumber'>\r\n        <label htmlFor='numberOfEvent'></label>\r\n        <input\r\n          type='number'\r\n          name='numberOfEvent'\r\n          className='event-number-input'\r\n          placeholder='Enter number of events'\r\n          value={this.state.eventCount}\r\n          onChange={this.handleEventInputChanged}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n{\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181161784712000\\\"\",\r\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:17:46.000Z\",\r\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n   \"summary\": \"Learn JavaScript\",\r\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n   \"location\": \"London, UK\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181159875584000\\\"\",\r\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:14:30.000Z\",\r\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n   \"summary\": \"React is Fun\",\r\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n   \"location\": \"Berlin, Germany\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n];\r\n\r\nexport { mockData };","/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n\r\nimport { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nimport './nprogress.css';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://nzgur3m5u1.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://nzgur3m5u1.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://nzgur3m5u1.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { getEvents, extractLocations } from './api';\r\nimport './nprogress.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    eventCount: 5,\r\n  };\r\n\r\n  updateEvents = (location, eventCount) => {\r\n    let locationEvents;\r\n    getEvents().then((events) => {\r\n      if (location === 'all' && eventCount === 0) {\r\n        locationEvents = events;\r\n      } else if (location !== 'all' && eventCount === 0) {\r\n        locationEvents = events.filter((event) => event.location === location);\r\n        console.log(eventCount);\r\n      } else if (location === '' && eventCount > 0) {\r\n        locationEvents = events.slice(0, eventCount);\r\n      }\r\n      this.setState({\r\n        events: locationEvents,\r\n        eventCount,\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: events.slice(0, this.state.eventCount),\r\n          locations: extractLocations(events),\r\n        });\r\n      }\r\n    });\r\n  }\r\n  \r\n  componentWillUnmount(){\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Meet App</h1>\r\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} numberOfEvents={this.state.numberOfEvents} />\r\n        <NumberOfEvents eventCount={this.state.eventCount} updateEvents={this.updateEvents} />\r\n        <EventList events={this.state.events} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\natatus.config('615918d4e14547d7bd04044397a7df26').install();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}